//
//  UploadManager.m
//  UploadImages
//
//  Created by yabei on 16/7/7.
//  Copyright ¬© 2016Âπ¥ com.bodi.merchant. All rights reserved.
//

#import "UploadManager.h"
#import "NSURLSessionWrapperOperation.h"
#import <AFNetworking/AFNetworking.h>
#import <AFNetworking/AFURLSessionManager.h>

@interface UploadManager ()
{
    NSMutableArray *imagesArr;
}
@end

@implementation UploadManager

//gcd‰∏ä‰º†
+ (void)commentReqWithImages:(NSArray *)imageArr :(NSString *)url
                      params:(NSDictionary *)pramaDic
                     success:(void (^)(id JSON))success
                     failure:(void (^)(NSError *))failure
{
    
    __block NSInteger imgBackCount = 0;
    
    dispatch_group_t group = dispatch_group_create();
    
    for (NSInteger i = 0; i < imageArr.count; i++) {
        
        dispatch_group_enter(group);
        
        NSURLSessionUploadTask* uploadTask = [UploadManager uploadTaskWithImage:imageArr[i] :url :pramaDic completion:^(NSURLResponse *response, id responseObject, NSError *error) {
            if (error) {
                //NSLog(@"Á¨¨ %d Âº†ÂõæÁâá‰∏ä‰º†Â§±Ë¥•: %@", (int)i + 1, error);
                dispatch_group_leave(group);
            } else {
//                @synchronized () {  NSMutableArray ÊòØÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑÔºåÊâÄ‰ª•Âä†‰∏™ÂêåÊ≠•ÈîÅ
//                    
//                }
                imgBackCount++;
                if (imgBackCount == imageArr.count) {
                    dispatch_group_notify(group, dispatch_get_main_queue(), ^{
                        
                        //ÂõæÁâá‰∏ä‰º†‰πãÂêéÁöÑÊìç‰Ωú
                        
                    });

                }
                
                //Â§ÑÁêÜÊàêÂäüËøîÂõûÊï∞ÊçÆ
                
                dispatch_group_leave(group);
            }
        }];
        [uploadTask resume];
    }
}


+ (void)uploadImagesWith:(NSArray *)images :(NSString *)url :(NSDictionary *)params uploadFinish:(uploadCallBlock)finish success:(uploadSuccess)success failure:(uploadFailure)failure
{
    
//Ëá™Â∑±Âú®Â§ÑÁêÜoperation‰∏ä‰º†Â§öÂõæÁöÑÊó∂ÂÄôÔºå ÂèØËÉΩ‰ºöÂá∫Áé∞bug   completionOperationÂú®ÊúÄÂêé‰∏Ä‰∏™uploadOperationËøòÊ≤°ÂÆåÊàêÊó∂Â∞±ÊâßË°å‰∫Ü   ‰ºöÂØºËá¥Â∞ë‰∏ÄÂº†Âõæ    ÊöÇÊó∂Ê≤°ÊâæÂà∞ÂéüÂõ†ÔºõÂ∏åÊúõÊúâÂ§ßÁ•ûËÉΩÂ§üÊâæÂá∫ÈóÆÈ¢òÊâÄÂú®
// ÔºàGCDÂíåNSOperation‰πãÈó¥ÁöÑ‰ºòÁº∫ÁÇπÊØîËæÉÂ∞±‰∏çÊèê‰∫ÜÔºâ

//ÂæàÂùë,ÊúÄÁªàÊµãËØï  ‰∏§‰∏™ÊñπÊ≥ïÈÉΩÊ≤°ÊúâÈóÆÈ¢ò  ‰∏ªË¶ÅËøòÊòØÂ§ßÈáèÁöÑÂºÇÊ≠•Êìç‰Ωú.  ÂØºËá¥ ÊúÄÂêé‰∏Ä‰∏™taskÂõûË∞ÉÂõûÊù•ÁöÑÊó∂ÂÄô  completionÁöÑ‰æùËµñËß¶Âèë,Â∞±ÊâßË°åÂÆåÊàêÂõûË∞É‰∫Ü,ËøôÊó∂ÂÄôÊúÄÂêé‰∏Ä‰∏™Âõæ‰∏ä‰º†ÁöÑÁªìÊûúÊâçÂõûÊù•
//ÈíàÂØπËøô‰∏™Â§ßÂùë,Âè™ËÉΩÂú®ÂõæÁâá‰∏ä‰º†taskÈáåÈù¢  ËøõË°åÂà§Êñ≠  ÊàêÂäü‰∏™Êï∞countÂíåÊï∞ÁªÑ‰∏™Êï∞Áõ∏Á≠â  ÂÜçÊâßË°åfisish
    
    
    NSOperationQueue *queue = [[NSOperationQueue alloc] init];
    
    queue.maxConcurrentOperationCount = 5;//control it yourself
    
    NSBlockOperation *completionOperation = [NSBlockOperation blockOperationWithBlock:^{
        [[NSOperationQueue mainQueue] addOperationWithBlock:^{ // ÂõûÂà∞‰∏ªÁ∫øÁ®ãÊâßË°åÔºåÊñπ‰æøÊõ¥Êñ∞ UI Á≠â
            //NSLog(@"‰∏ä‰º†ÂÆåÊàê!");
            
            finish();
        }];
    }];
    
    __block NSInteger imgBackCount = 0;
    for (NSInteger i = 0; i < images.count; i++) {
        
        NSURLSessionUploadTask* uploadTask = [UploadManager uploadTaskWithImage:images[i] :url :params completion:^(NSURLResponse *response, id responseObject, NSError *error) {
            if (error) {
                //NSLog(@"Á¨¨ %d Âº†ÂõæÁâá‰∏ä‰º†Â§±Ë¥•: %@", (int)i + 1, error);
                failure(error, (int)i);
            } else {
                //NSLog(@"Á¨¨ %d Âº†ÂõæÁâá‰∏ä‰º†ÊàêÂäü: ", (int)i + 1);
                imgBackCount++;
                @synchronized (images) { // NSMutableArray ÊòØÁ∫øÁ®ã‰∏çÂÆâÂÖ®ÁöÑÔºåÊâÄ‰ª•Âä†‰∏™ÂêåÊ≠•ÈîÅ
                    
                    NSError *error = nil;
                    NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableContainers error:&error];
                    NSDictionary *imgInfoDic = [dic objectForKey:@"data"];
                    
                    success(imgInfoDic, (int)i);
                    /**
                     *  ËøôÈáåÊúâiËøô‰∏™ÂèÇÊï∞  ÊâÄ‰ª•ÂõæÁâáÊàêÂäüËøîÂõûÊï∞ÊçÆÁöÑÂÖàÂêéÈ°∫Â∫èÊòØÊúâÂ∫èÁöÑ  ÊÄé‰πàÂÅöÈù†‰Ω†Ëá™Â∑±Êãâ
                     */
                    
                }
                
                if (imgBackCount == images.count) {
                    [queue addOperation:completionOperation];
                }
                
            }
        }];
        
        //ÈáçÂÜôÁ≥ªÁªüNSOperation ÂæàÂÖ≥ÈîÆ  ‰Ω†ÂèØ‰ª•Áõ¥Êé•copy
        NSURLSessionWrapperOperation *uploadOperation = [NSURLSessionWrapperOperation operationWithURLSessionTask:uploadTask];
        [completionOperation addDependency:uploadOperation];
        [queue addOperation:uploadOperation];
        
    }
}

#pragma mark - util

+ (NSURLSessionUploadTask*)uploadTaskWithImage:(UIImage *)image  :(NSString *)url :(NSDictionary *)params completion:(void (^)(NSURLResponse *response, id responseObject, NSError *error))completionBlock {
    
    @autoreleasepool {
        
        // ÊûÑÈÄ† NSURLRequest
        NSError* error = NULL;
        NSMutableURLRequest *request = [[AFHTTPRequestSerializer serializer] multipartFormRequestWithMethod:@"POST" URLString:url parameters:params constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {
            
            //ËΩ¨Êç¢dataÁöÑÊñπÊ≥ï ‰ªÖÈÄÇÁî®‰∫éüòàÊ•º‰∏ªüòàÊú¨‰∫∫
//            NSData *imageData = [image imageByScalingToWithSize:PIC_MAX_WIDTH];
            
            NSData *imageData = UIImageJPEGRepresentation(image, 0.5);
            
            [formData appendPartWithFileData:imageData name:@"file" fileName:@"upload.jpg" mimeType:@"image/jpeg"];
        } error:&error];
        
        // Â∞Ü NSURLRequest ‰∏é completionBlock ÂåÖË£Ö‰∏∫ NSURLSessionUploadTask
        AFURLSessionManager *manager = [[AFURLSessionManager alloc] initWithSessionConfiguration:[NSURLSessionConfiguration defaultSessionConfiguration]];
        
        AFHTTPResponseSerializer *responseSerializer = manager.responseSerializer;
        
        NSMutableSet *contentTypes = [[NSMutableSet alloc] initWithSet:responseSerializer.acceptableContentTypes];
        [contentTypes addObject:@"text/html"];
        [contentTypes addObject:@"text/plain"];
        
        manager.responseSerializer = responseSerializer;
        manager.responseSerializer = [AFHTTPResponseSerializer serializer];
        
        
        
        
        
        NSURLSessionUploadTask *uploadTask = [manager uploadTaskWithStreamedRequest:request progress:^(NSProgress * _Nonnull uploadProgress) {
       } completionHandler:completionBlock];
        
        return uploadTask;
        
    }
}

@end
